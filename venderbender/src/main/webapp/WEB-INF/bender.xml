<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:annotation-config /> <!-- @AutoWired -->
	<mvc:annotation-driven /> <!-- @Controller @RequestMapping -->

	<mvc:resources location="/static/**" mapping="/**" />

	<!-- ViewResolver does forwards/redirect -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/pages/" /> 
		<property name="suffix" value=".html" />
	<!-- give ViewResolver a String "home" and it resolves as: /pages/home.html -->
	</bean> 

	<!-- Spring core/context: find beans and auto-register -->
	<context:component-scan base-package="com.revature"/>

	<tx:annotation-driven />
	<!-- 1. DataSource -->
	<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="#{systemEnvironment['DB_URL']}" />
		<property name="username" value="#{systemEnvironment['DB_USERNAME']}" />
		<property name="password" value="#{systemEnvironment['DB_PASSWORD']}" />
	</bean>
	<!-- 2.sessionFactory -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.revature.beans" /> <!-- Find anything with @Entity -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults"> false</prop>
			</props>
		</property>
	</bean>
	<!-- 3. TransactionManager -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>
	<!-- 4. DAO -->
	<bean name="concertDAO" class="com.revature.data.ConcertDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="customerDAO" class="com.revature.data.CustomerDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name = "orderDAO" class = "com.revature.data.OrderDAOImpl">
		<property name="sessionFactory" ref = "sessionFactory"></property>
	</bean>
	<bean name = "albumDAO" class = "com.revature.data.AlbumDAOImpl">
		<property name="sessionFactory" ref = "sessionFactory"></property>
	</bean>
	<bean name = "dataService" class = "com.revature.services.DataService">
	</bean>
	<bean name = "authenticationService" class = "com.revature.services.AuthenticationService">
	</bean>
	
	<!-- Beans -->
	<bean name="album" class="com.revature.beans.Album" scope = "prototype"></bean> 
	<bean name="concert" class="com.revature.beans.Concert" scope = "prototype"></bean> 
	<bean name="customer" class="com.revature.beans.Customer" scope = "prototype"></bean> 
	<bean name="orderItem" class = "com.revature.beans.OrderItem" scope = "prototype"/> 
	<bean name="order" class = "com.revature.beans.Order" scope = "prototype"/> 
</beans>
